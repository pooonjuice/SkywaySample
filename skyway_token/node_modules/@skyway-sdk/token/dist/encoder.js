"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SkyWayAuthToken = void 0;
const common_1 = require("@skyway-sdk/common");
const jsrsasign_1 = __importDefault(require("jsrsasign"));
const jwt_decode_1 = __importDefault(require("jwt-decode"));
const _1 = require(".");
const log = new common_1.Logger('packages/token/src/encoder.ts');
class SkyWayAuthToken {
    constructor(props) {
        Object.assign(this, props);
    }
    static Decode(token) {
        try {
            const props = (0, jwt_decode_1.default)(token);
            const authToken = new SkyWayAuthToken(props);
            authToken.tokenString = token;
            return authToken;
        }
        catch (error) {
            throw new common_1.SkyWayError({
                path: log.prefix,
                info: _1.tokenErrors.invalidParameter,
                error,
            });
        }
    }
    encode(secret) {
        const payload = {
            jti: this.jti,
            iat: this.iat,
            exp: this.exp,
            scope: this.scope,
        };
        this.tokenString = jsrsasign_1.default.KJUR.jws.JWS.sign('HS256', JSON.stringify({ alg: 'HS256', typ: 'JWT' }), JSON.stringify(payload), secret);
        return this.tokenString;
    }
    /**@internal */
    toJSON() {
        return {
            jti: this.jti,
            iat: this.iat,
            exp: this.exp,
            scope: this.scope,
            encoded: this.tokenString,
        };
    }
}
exports.SkyWayAuthToken = SkyWayAuthToken;
//# sourceMappingURL=encoder.js.map